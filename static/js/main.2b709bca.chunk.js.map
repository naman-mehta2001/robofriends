{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","src","alt","CardList","cardList","robots","map","user","SearchBox","change","type","placeholder","onChange","Scroll","props","children","ErrorBoundary","state","hasError","_error","_info","this","setState","Component","App","onSearchChange","Event","searchField","target","value","axios","get","then","response","data","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAaeA,MAVf,YAAgC,IAAjBC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,GAAGC,EAAQ,EAARA,MACnB,OACQ,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BH,EAA1B,iBAA6CI,IAAI,WACzD,6BAAKL,IACL,4BAAIE,QCILI,MATf,YAA6B,IACnBC,EADkB,EAATC,OACSC,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAoBT,GAAIS,EAAKT,GAAIC,MAAOQ,EAAKR,MAAOF,KAAOU,EAAKV,MAArDU,EAAKT,OACtD,OACI,8BACKM,KCIEI,EARG,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCU,KAAK,OAAOC,YAAc,gBAAgBC,SAAUH,O,+BCKrGI,MARf,SAAgBC,GACZ,OACI,qBAAKd,UAAU,aAAf,SACKc,EAAMC,YCYJC,EAhBf,kDACI,WAAYF,GAAQ,IAAD,8BACf,cAAMA,IACDG,MAAQ,CACTC,UAAW,GAHA,EADvB,qDAOI,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAW,MARlC,oBAWI,WACI,OAAQG,KAAKJ,MAAMC,SAAW,oDAA8BG,KAAKP,MAAMC,aAZ/E,GAAmCQ,aC8CpBC,E,kDAtCX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAaVW,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVK,YAAcD,EAAME,OAAOC,SAb/B,EAAKZ,MAAQ,CACTU,YAAc,GACdtB,OAAS,IALE,E,qDAQnB,WAAoB,IAAD,OACfyB,IAAMC,IAAI,8CAA8CC,MAAK,SAAAC,GACzD,EAAKX,SAAS,CAACjB,OAAS4B,EAASC,Y,oBASzC,WACI,MAA8Bb,KAAKJ,MAA5BZ,EAAP,EAAOA,OAAQsB,EAAf,EAAeA,YACTQ,EAAiBd,KAAKJ,MAAMZ,OAAO+B,QAAO,SAAAC,GAC5C,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASZ,EAAYW,kBAEzD,OAAUjC,EAAOmC,OACb,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,OAAQY,KAAKI,iBACxB,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUpB,OAAQ8B,WANH,6C,GAzBjBZ,aCGHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2b709bca.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"tachyons\"\r\n\r\nfunction Card({name,id,email}) {\r\n    return (\r\n            <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\r\n                <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from \"./Card\"\r\n\r\nfunction CardList({robots}) {\r\n    const cardList = robots.map((user) => <Card key={user.id} id={user.id} email={user.email} name= {user.name} />)\r\n    return (\r\n        <div>\r\n            {cardList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport \"tachyons\"\r\n\r\nconst SearchBox = ({change}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"text\" placeholder = \"search robots\" onChange={change} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\nimport \"../Components-css/scroll.css\"\r\n\r\nfunction Scroll(props) {\r\n    return (\r\n        <div className=\"scrollprop\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\n\r\nexport class ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n    componentDidCatch(_error,_info){\r\n        this.setState({hasError : true})\r\n    }\r\n\r\n    render() {\r\n        return (this.state.hasError ? <h1>Something is Wrong</h1> : this.props.children)\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React, {Component} from 'react'\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from \"../Components/SearchBox\"\r\nimport \"tachyons\"\r\nimport \"./App.css\"\r\nimport axios from \"axios\"\r\nimport Scroll from \"../Components/Scroll\"\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            searchField : \"\",\r\n            robots : [], //empty, call users using API call       \r\n        }\r\n    }\r\n    componentDidMount(){\r\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => {\r\n            this.setState({robots : response.data})\r\n        })\r\n        // fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState({robots : users}))\r\n    }\r\n    onSearchChange = (Event) => {\r\n        this.setState({\r\n            searchField : Event.target.value,\r\n        })\r\n    }\r\n    render(){\r\n        const {robots, searchField} = this.state\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n        return (!(robots.length) ? <h1>Loading</h1> : (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f2\">RoboFriends</h1>\r\n                <SearchBox change={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                    <CardList robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        ))\r\n    }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Container/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}